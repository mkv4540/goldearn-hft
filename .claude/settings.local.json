{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(*)",
      "Read(*)",
      "Write(*)",
      "Edit(*)",
      "MultiEdit(*)",
      "Glob(*)",
      "Grep(*)",
      "LS(*)",
      "NotebookRead(*)",
      "NotebookEdit(*)",
      "WebFetch(*)",
      "TodoWrite(*)",
      "WebSearch(*)",
      "Task(*)",
      "Bash(./tests/test_core)",
      "Bash(./tests/test_config:*)",
      "Bash(chmod:*)",
      "Bash(./tests/test_core:*)",
      "Bash(otool:*)",
      "Bash(./verify_build.sh:*)",
      "Bash(ls:*)",
      "Bash(../run_tests.sh)",
      "Bash(/Users/manishkumar/Desktop/gitlocal/api_python3/learn_genius_quiz/goldearn-hft/setup_test_configs.sh)",
      "Bash(git checkout:*)",
      "Bash(git push:*)",
      "Bash(./test_risk)",
      "Bash(timeout:*)",
      "Bash(./run_tests.sh)",
      "Bash(make test:*)",
      "Bash(make:*)",
      "Bash(./build.sh)",
      "Bash(./tests/test_enhanced_risk_management:*)",
      "Bash(git pull:*)",
      "Bash(git add:*)",
      "Bash(mkdir:*)",
      "Bash(git config:*)",
      "Bash(brew install:*)",
      "Bash(cmake:*)",
      "Bash(ctest:*)",
      "Bash(gh run list:*)",
      "Bash(true)",
      "Bash(rm:*)",
      "Bash(./scripts/timeout_optimizer.sh:*)",
      "Bash(mv:*)",
      "Bash(source:*)",
      "Bash(cat:*)",
      "Bash(gh:*)",
      "Bash(clang-format:*)",
      "Bash(clang-format:*)",
      "Bash(./test_core)",
      "Bash(./build/test_core)",
      "Bash(./build/tests/test_core)",
      "Bash(./test_git_optimization.sh)",
      "Bash(./build/tests/test_monitoring)",
      "Bash(bash:*)",
      "Bash(git -C /Users/manishkumar/Desktop/gitlocal/api_python3/learn_genius_quiz/goldearn-hft status)",
      "Bash(git --git-dir=/Users/manishkumar/Desktop/gitlocal/api_python3/learn_genius_quiz/goldearn-hft/.git --work-tree=/Users/manishkumar/Desktop/gitlocal/api_python3/learn_genius_quiz/goldearn-hft status)",
      "Bash(bash -c 'cd /Users/manishkumar/Desktop/gitlocal/api_python3/learn_genius_quiz/goldearn-hft && git status')",
      "Bash(bash -c 'cd /Users/manishkumar/Desktop/gitlocal/api_python3/learn_genius_quiz/goldearn-hft && git add src/monitoring/health_check.cpp src/trading/order_manager.hpp')",
      "Bash(bash -c 'cd /Users/manishkumar/Desktop/gitlocal/api_python3/learn_genius_quiz/goldearn-hft && git commit -m \"\"Fix CI compilation failures by adding missing includes\n\n- Add #include <cstring> to health_check.cpp for strerror function  \n- Add #include <condition_variable> to order_manager.hpp\n\nThis resolves the clang-diagnostic-error issues that were causing\nCI build failures in the static analysis workflow.\n\nðŸ¤– Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\"\"')",
      "Bash(bash -c 'cd /Users/manishkumar/Desktop/gitlocal/api_python3/learn_genius_quiz/goldearn-hft && git log --oneline -1')",
      "Bash(bash -c 'cd /Users/manishkumar/Desktop/gitlocal/api_python3/learn_genius_quiz/goldearn-hft && git push origin day_7')",
      "Bash(bash -c:*)",
      "Bash(git commit:*)",
      "Bash(git --version)",
      "Bash(git --git-dir=/Users/manishkumar/Desktop/gitlocal/api_python3/learn_genius_quiz/goldearn-hft/.git --work-tree=/Users/manishkumar/Desktop/gitlocal/api_python3/learn_genius_quiz/goldearn-hft add CMakeLists.txt)",
      "Bash(git reset:*)",
      "Bash(git commit:*)",
      "Bash(git count-objects:*)",
      "Bash(/Users/manishkumar/Desktop/gitlocal/api_python3/learn_genius_quiz/goldearn-hft/scripts/git_timeout_optimizer.sh)",
      "Bash(git_health_check)",
      "Bash(git quick-status:*)"
    ],
    "deny": []
  }
}