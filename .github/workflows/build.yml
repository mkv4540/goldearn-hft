name: Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CMAKE_BUILD_TYPE: Release
  BUILD_TESTS: ON
  BUILD_BENCHMARKS: ON

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            cmake \
            ninja-build \
            pkg-config \
            build-essential \
            libssl-dev \
            libboost-all-dev \
            libzmq3-dev \
            libpq-dev \
            postgresql-server-dev-all \
            redis-server \
            libhiredis-dev \
            valgrind \
            clang-format \
            clang-tidy \
            cppcheck

      - name: Install specific compiler
        run: |
          if [[ "${{ matrix.compiler }}" == gcc-* ]]; then
            sudo apt-get install -y ${{ matrix.cxx }}
          elif [[ "${{ matrix.compiler }}" == clang-* ]]; then
            wget https://apt.llvm.org/llvm.sh
            chmod +x llvm.sh
            sudo ./llvm.sh ${{ matrix.compiler == 'clang-14' && '14' || '15' }}
            sudo apt-get install -y clang-${{ matrix.compiler == 'clang-14' && '14' || '15' }} \
                                   clang++-${{ matrix.compiler == 'clang-14' && '14' || '15' }}
          fi

      - name: Install C++ dependencies
        run: |
          # Use apt packages where possible for faster builds
          sudo apt-get install -y \
            libgtest-dev \
            libbenchmark-dev \
            nlohmann-json3-dev

      - name: Configure CMake
        run: |
          export CC=${{ matrix.cc }}
          export CXX=${{ matrix.cxx }}
          cmake -B build -f CMakeLists.minimal.txt \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DCMAKE_CXX_STANDARD=20 \
            -DBUILD_TESTS=ON \
            -G Ninja

      - name: Build application
        run: cmake --build build --parallel 2

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files-${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.build_type }}
          path: build/
          retention-days: 1